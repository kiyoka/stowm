;;-*- mode: nendo; syntax: scheme -*-;;
;;
;; listutil-test.nnd - test suite for listutil
;;  
;;   Copyright (c) 2015  Kiyoka Nishiyama  <kiyoka@sumibi.org>
;;   
;;   Redistribution and use in source and binary forms, with or without
;;   modification, are permitted provided that the following conditions
;;   are met:
;;   
;;   1. Redistributions of source code must retain the above copyright
;;      notice, this list of conditions and the following disclaimer.
;;  
;;   2. Redistributions in binary form must reproduce the above copyright
;;      notice, this list of conditions and the following disclaimer in the
;;      documentation and/or other materials provided with the distribution.
;;  
;;   3. Neither the name of the authors nor the names of its contributors
;;      may be used to endorse or promote products derived from this
;;      software without specific prior written permission.
;;  
;;   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;;   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;;   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;;   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;;   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;;   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
;;   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;;   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;;   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;;   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;;   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


(use nendo.test)
(test-start "listutil")

;;===================================================================
;;-------------------------------------------------------------------
(test-section "listutil")
(use stowm.env)
(use stowm.util)
(use stowm.parseutil)
(use stowm.listutil)
(test-module 'listutil)

(test* "grouping (1)"
       '(
         ("emacs"
          ("emacs-24.3" #f i s 35)
          ("emacs-24.4" e i s 36))
         ("ruby"
          ("ruby-2.1.3" #f i s 115)
          ("ruby-2.2.0" e i #f 116)))
       (stowed-list-to-tree
        '(
          ("emacs-24.3" #f i s 35)
          ("emacs-24.4" e i s 36)
          ("ruby-2.1.3" #f i s 115)
          ("ruby-2.2.0" e i #f 116))))

(test* "grouping (2)"
       '("emacs" "ruby")
       (map car 
            (stowed-list-to-tree
             '(
               ("emacs-24.3" #f i s 35)
               ("emacs-24.4" e i s 36)
               ("ruby-2.1.3" #f i s 115)
               ("ruby-2.2.0" e i #f 116)))))

(test* "resolve program number (1)"
       116
       (resolve-program-number "ruby"
                               'e
                               '(
                                 ("emacs"
                                  ("emacs-24.3" #f i s 35)
                                  ("emacs-24.4" e i s 36))
                                 ("ruby"
                                  ("ruby-2.1.3" #f i s 115)
                                  ("ruby-2.2.0" e i #f 116)))))

(test* "resolve program number (2)"
       115
       (resolve-program-number "ruby"
                               's
                               '(
                                 ("emacs"
                                  ("emacs-24.3" #f i s 35)
                                  ("emacs-24.4" e i s 36))
                                 ("ruby"
                                  ("ruby-2.1.3" #f i s 115)
                                  ("ruby-2.2.0" e i #f 116)))))


;;===================================================================
(test-end)
