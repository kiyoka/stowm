;;-*- mode: nendo; syntax: scheme -*-;;
;;
;; makefile-test.nnd - test suite for generator of Makefile
;;  
;;   Copyright (c) 2015  Kiyoka Nishiyama  <kiyoka@sumibi.org>
;;   
;;   Redistribution and use in source and binary forms, with or without
;;   modification, are permitted provided that the following conditions
;;   are met:
;;   
;;   1. Redistributions of source code must retain the above copyright
;;      notice, this list of conditions and the following disclaimer.
;;  
;;   2. Redistributions in binary form must reproduce the above copyright
;;      notice, this list of conditions and the following disclaimer in the
;;      documentation and/or other materials provided with the distribution.
;;  
;;   3. Neither the name of the authors nor the names of its contributors
;;      may be used to endorse or promote products derived from this
;;      software without specific prior written permission.
;;  
;;   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;;   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;;   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;;   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;;   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;;   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
;;   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;;   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;;   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;;   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;;   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


(use nendo.test)
(test-start "makefile")

;;===================================================================
;;-------------------------------------------------------------------
(test-section "cmdline")
(use stowm.util)
(use stowm.parseutil)
(use stowm.specfile)
(test-module 'specfile)

(test* "cmdline for makefile (1)"
       "cd ./ruby-2.1.3 && bash configure --prefix=/usr/local/stow/ruby-2.1.3 && make && make install"
       (create-build-cmdline
        "cd ./ruby-2.1.3"
        "bash configure --prefix=/usr/local/stow/ruby-2.1.3"
        "make"
        "make install"))

(test* "cmdline for makefile (2)"
       "cd ./ruby-2.1.3"
       (create-build-cmdline
        "cd ./ruby-2.1.3"
        "   "
        "  "
        " "))

(test* "cmdline for makefile (3)"
       "cd ./ruby-2.1.3"
       (create-build-cmdline
        "cd ./ruby-2.1.3"
        ""
        "\t"
        "\t\t"))

(test* "cmdline for makefile (4)"
       "cd ./redis-3.0.0 && make && make test && make PREFIX=/usr/local/stow/redis-3.0.0 install"
       (create-build-cmdline
        "cd ./redis-3.0.0"
        ""
        "make && make test"
        "make PREFIX=/usr/local/stow/redis-3.0.0 install"))


;;-------------------------------------------------------------------
(test-section "makefile")

;; Ordinary specfile which created from local tar.gz archive
(test* "spec-to-makefile (local tar.gz)"
"all: ruby-2.1.3/configure
\tcd ./ruby-2.1.3 && bash configure --prefix=/usr/local/stow/ruby-2.1.3 && make && make install

ruby-2.1.3/configure : ruby-2.1.3.tar.gz
\ttar zxf ruby-2.1.3.tar.gz
\ttouch ruby-2.1.3/configure

ruby-2.1.3.tar.gz :
\t/bin/cp /home/aaaa/stowm/ruby-2.1.3/ruby-2.1.3.tar.gz ruby-2.1.3.tar.gz

clean:
\t/bin/rm -rf ./ruby-2.1.3
"
       (create-makefile
        '(
          ("fetch" .  #f)
          ("configure" . "bash configure --prefix=/usr/local/stow/ruby-2.1.3")
          ("make" . "make")
          ("install" . "make install")
          ("url" . "http://cache.ruby-lang.org/pub/ruby/2.1/ruby-2.1.3.tar.gz")
          ("filename" . "ruby-2.1.3.tar.gz")
          ("projname" . "ruby-2.1.3"))
        "/home/aaaa/stowm" ;; home-repos
        ))

;; Ordinary specfile which created from remote download url.
(test* "spec-to-makefile (remote tar.gz)"
"all: ruby-2.2.0/configure
\tcd ./ruby-2.2.0 && bash configure --prefix=/usr/local/stow/ruby-2.2.0 && make && make install

ruby-2.2.0/configure : ruby-2.2.0.tar.gz
\ttar zxf ruby-2.2.0.tar.gz
\ttouch ruby-2.2.0/configure

ruby-2.2.0.tar.gz :
\twget http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0.tar.gz -O ruby-2.2.0.tar.gz

clean:
\t/bin/rm -rf ./ruby-2.2.0
"
       (create-makefile
        '(
          ("fetch" .  "wget http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0.tar.gz -O ruby-2.2.0.tar.gz")
          ("configure" . "bash configure --prefix=/usr/local/stow/ruby-2.2.0")
          ("make" . "make")
          ("install" . "make install")
          ("url" . "http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0.tar.gz")
          ("filename" . "ruby-2.2.0.tar.gz")
          ("projname" . "ruby-2.2.0"))
        "/home/bbbb/stowm" ;; home-repos
        ))

;; Ordinary specfile which created from remote download url.
(test* "spec-to-makefile (remote tar.xz)"
"all: ruby-2.2.0/configure
\tcd ./ruby-2.2.0 && bash configure --prefix=/usr/local/stow/ruby-2.2.0 && make && make install

ruby-2.2.0/configure : ruby-2.2.0.tar.xz
\txzcat ruby-2.2.0.tar.xz | tar xf -
\ttouch ruby-2.2.0/configure

ruby-2.2.0.tar.xz :
\twget http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0.tar.xz -O ruby-2.2.0.tar.xz

clean:
\t/bin/rm -rf ./ruby-2.2.0
"
       (create-makefile
        '(
          ("fetch" .  "wget http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0.tar.xz -O ruby-2.2.0.tar.xz")
          ("configure" . "bash configure --prefix=/usr/local/stow/ruby-2.2.0")
          ("make" . "make")
          ("install" . "make install")
          ("url" . "http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0.tar.xz")
          ("filename" . "ruby-2.2.0.tar.xz")
          ("projname" . "ruby-2.2.0"))
        "/home/bbbb/stowm" ;; home-repos
        ))


;; tar.gz doesn't have configure script.
(test* "spec-to-makefile (not exist configure)"
"all: redis-3.0.0/configure
\tcd ./redis-3.0.0 && make && make test && make PREFIX=/usr/local/stow/redis-3.0.0 install

redis-3.0.0/configure : redis-3.0.0.tar.gz
\ttar zxf redis-3.0.0.tar.gz
\ttouch redis-3.0.0/configure

redis-3.0.0.tar.gz :
\twget http://download.redis.io/releases/redis-3.0.0.tar.gz -O redis-3.0.0.tar.gz

clean:
\t/bin/rm -rf ./redis-3.0.0
"
       (create-makefile
        '(
          ("fetch" .  "wget http://download.redis.io/releases/redis-3.0.0.tar.gz -O redis-3.0.0.tar.gz")
          ("configure" . "")
          ("make" . "make && make test")
          ("install" . "make PREFIX=/usr/local/stow/redis-3.0.0 install")
          ("url" . "http://download.redis.io/releases/redis-3.0.0.tar.gz")
          ("filename" . "redis-3.0.0.tar.gz")
          ("projname" . "redis-3.0.0"))
        "/home/bbbb/stowm" ;; home-repos
        ))


;;===================================================================
(test-end)
