;;-*- mode: nendo; syntax: scheme -*-;;
;;
;; parseutil-test.nnd - test suite for parseutil
;;  
;;   Copyright (c) 2014  Kiyoka Nishiyama  <kiyoka@sumibi.org>
;;   
;;   Redistribution and use in source and binary forms, with or without
;;   modification, are permitted provided that the following conditions
;;   are met:
;;   
;;   1. Redistributions of source code must retain the above copyright
;;      notice, this list of conditions and the following disclaimer.
;;  
;;   2. Redistributions in binary form must reproduce the above copyright
;;      notice, this list of conditions and the following disclaimer in the
;;      documentation and/or other materials provided with the distribution.
;;  
;;   3. Neither the name of the authors nor the names of its contributors
;;      may be used to endorse or promote products derived from this
;;      software without specific prior written permission.
;;  
;;   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;;   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;;   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;;   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;;   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;;   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
;;   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;;   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;;   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;;   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;;   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


(use nendo.test)
(test-start "parseutil")

;;===================================================================
;;-------------------------------------------------------------------
(test-section "parseutil")
(use stowm.util)
(use stowm.parseutil)
(test-module 'parseutil)

(test* "split-path (1)" '(
                          "/xxx/yyy"
                          "aaaa-1.2.3.tar.gz")
       (stowm-split-path
        "/xxx/yyy/aaaa-1.2.3.tar.gz"))

(test* "split-path (2)" '(
                          "/"
                          "aaaa-1.2.3.tar.gz")
       (stowm-split-path
        "/aaaa-1.2.3.tar.gz"))

(test* "split-path (3)" '(
                          "."
                          "aaaa-1.2.3.tar.gz")
       (stowm-split-path
        "aaaa-1.2.3.tar.gz"))

(test* "split-path (4)" '(
                          "."
                          "")
       (stowm-split-path
        ""))

(stowm-split-filename
 "aaaa-1.2.3.tar.gz")

(test* "split-filename (1)" '(
                              "aaaa"
                              "1.2.3"
                              "tar.gz")
       (stowm-split-filename
        "aaaa-1.2.3.tar.gz"))

(test* "split-filename (2)" '("aaaa" #f "tgz")
       (stowm-split-filename
        "aaaa.tgz"))

(test* "split-filename (3)" '(#f #f #f)
       (stowm-split-filename
        "aaaa1.2.3.tar.gz"))

(test* "split-filename (4)" '("aaaa" "1.2.3.gz" #f)
       (stowm-split-filename
        "aaaa-1.2.3.gz"))

(test* "split-filename (5)" '(
                              "aaaa"
                              "1.2.3"
                              "tar.bz2")
       (stowm-split-filename
        "aaaa-1.2.3.tar.bz2"))

(test* "split-filename (6)" '(
                              "aaaa"
                              "1.2.3"
                              "tar.xz")
       (stowm-split-filename
        "aaaa-1.2.3.tar.xz"))

(test* "split-filename (7)" '(
                              "aaaa"
                              "1.2.3"
                              "tar.z")
       (stowm-split-filename
        "aaaa-1.2.3.tar.z"))

(test* "split-filename (8)" '(
                              "aaaa"
                              "1.2.3"
                              "tar.Z")
       (stowm-split-filename
        "aaaa-1.2.3.tar.Z"))

(test* "split-filename (9)" '(
                              "emacs"
                              "24.4"
                              "tar.gz")
       (stowm-split-filename
        "emacs-24.4.tar.gz"))

(test* "split-filename (10)" '(
                              "ruby"
                              "2.2.0-preview1"
                              "tar.bz2")
       (stowm-split-filename
        "ruby-2.2.0-preview1.tar.bz2"))

(test* "split-filename:flagment (1)" '(
                                       "filename"
                                       #f
                                       #f)
       (stowm-split-filename
        "filename"))

(test* "split-filename:flagment (2)" '(
                                       "filename"
                                       "3.2.1"
                                       #f)
       (stowm-split-filename
        "filename-3.2.1"))

(test* "split-filename:flagment (3)" '(
                                       "filename"
                                       #f
                                       "tar.gz")
       (stowm-split-filename
        "filename.tar.gz"))

(test* "split-filename:flagment (4)" '(
                                       #f
                                       #f
                                       #f)
       (stowm-split-filename
        "tar.gz"))

(test* "split-filename:flagment (5)" '(
                                       #f
                                       #f
                                       #f)
       (stowm-split-filename
        "1.2.3.tar.gz"))


(test* "get-ext-type (1)" 'gz
       (stowm-get-ext-type
        "tgz"))

(test* "get-ext-type (2)" 'gz
       (stowm-get-ext-type
        "tar.gz"))

(test* "get-ext-type (3)" 'bz2
       (stowm-get-ext-type
        "tar.bz2"))

(test* "get-ext-type (4)" 'xz
       (stowm-get-ext-type
        "tar.xz"))

(test* "get-ext-type (5)" 'z
       (stowm-get-ext-type
        "tar.Z"))

(test* "get-ext-type (6)" #f
       (stowm-get-ext-type
        ".zip"))

(test* "get-ext-type (7)" #f
       (stowm-get-ext-type
        ".7z"))


(test* "parse-url (1)" #t
       (parsed? (stowm-parse-url "http://ftp.gnu.org/gnu/tar/tar-1.28.tar.xz")))

(test* "parse-url (2)" "http"
       (let1 parsed (stowm-parse-url "http://ftp.gnu.org/gnu/tar/tar-1.28.tar.xz")
         (scheme parsed)))

(test* "parse-url (3)" '(
                         "http"
                         "ftp.gnu.org"
                         80
                         "/gnu/tar/tar-1.28.tar.xz")
       (let1 parsed (stowm-parse-url "http://ftp.gnu.org/gnu/tar/tar-1.28.tar.xz")
         (list
          (scheme parsed)
          (host parsed)
          (port parsed)
          (path parsed))))

;; URL of tar
(test* "parse-url (4)" '(
                         "tar"
                         "1.28"
                         "tar-1.28"
                         "tar.xz"
                         xz)
       (let1 parsed (stowm-parse-url "http://ftp.gnu.org/gnu/tar/tar-1.28.tar.xz")
         (list
          (proj parsed)
          (ver  parsed)
          (package parsed)
          (ext  parsed)
          (arc-type  parsed))))

;; local file of tar
(test* "parse-url (5)" '(
                         "/tmp/tar-1.28.tar.xz"
                         "/tmp"
                         "tar-1.28.tar.xz"
                         "tar"
                         "1.28"
                         "tar-1.28"
                         "tar.xz"
                         xz)
       (let1 parsed (stowm-parse-url "/tmp/tar-1.28.tar.xz")
         (list
          (path parsed)
          (dir parsed)
          (filename parsed)
          (proj parsed)
          (ver  parsed)
          (package parsed)
          (ext  parsed)
          (arc-type  parsed))))
;; URL of git
(test* "parse-url (6)" '(
                         "/pub/software/scm/git/git-2.1.3.tar.xz"
                         "/pub/software/scm/git"
                         "git-2.1.3.tar.xz"
                         "git"
                         "2.1.3"
                         "git-2.1.3"
                         "tar.xz"
                         xz)
       (let1 parsed (stowm-parse-url "https://www.kernel.org/pub/software/scm/git/git-2.1.3.tar.xz")
         (list
          (path parsed)
          (dir parsed)
          (filename parsed)
          (proj parsed)
          (ver  parsed)
          (package parsed)
          (ext  parsed)
          (arc-type  parsed))))

;; URL of ruby 2.2.0-preview1
(test* "parse-url (7)" '(
                         "/pub/ruby/2.2"
                         "ruby-2.2.0-preview1.tar.bz2"
                         "ruby"
                         "2.2.0-preview1"
                         "ruby-2.2.0-preview1"
                         "tar.bz2"
                         bz2)
       (let1 parsed (stowm-parse-url "http://cache.ruby-lang.org/pub/ruby/2.2/ruby-2.2.0-preview1.tar.bz2")
         (list
          (dir parsed)
          (filename parsed)
          (proj parsed)
          (ver  parsed)
          (package parsed)
          (ext  parsed)
          (arc-type  parsed))))


;; URL of clang-3.5.0
(test* "parse-url (8)" '(
                         "/releases/3.5.0"
                         "cfe-3.5.0.src.tar.xz"
                         "cfe"
                         "3.5.0.src"
                         "cfe-3.5.0.src"
                         "tar.xz"
                         xz)
       (let1 parsed (stowm-parse-url "http://llvm.org/releases/3.5.0/cfe-3.5.0.src.tar.xz")
         (list
          (dir parsed)
          (filename parsed)
          (proj parsed)
          (ver  parsed)
          (package parsed)
          (ext  parsed)
          (arc-type  parsed))))


;;===================================================================
(test-end)
