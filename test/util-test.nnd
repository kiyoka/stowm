;;-*- mode: nendo; syntax: scheme -*-;;
;;
;; env-test.nnd - test suite for env
;;  
;;   Copyright (c) 2014  Kiyoka Nishiyama  <kiyoka@sumibi.org>
;;   
;;   Redistribution and use in source and binary forms, with or without
;;   modification, are permitted provided that the following conditions
;;   are met:
;;   
;;   1. Redistributions of source code must retain the above copyright
;;      notice, this list of conditions and the following disclaimer.
;;  
;;   2. Redistributions in binary form must reproduce the above copyright
;;      notice, this list of conditions and the following disclaimer in the
;;      documentation and/or other materials provided with the distribution.
;;  
;;   3. Neither the name of the authors nor the names of its contributors
;;      may be used to endorse or promote products derived from this
;;      software without specific prior written permission.
;;  
;;   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
;;   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
;;   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
;;   A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
;;   OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
;;   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
;;   TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
;;   PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
;;   LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
;;   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
;;   SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


(use nendo.test)
(test-start "util")

;;===================================================================
;;-------------------------------------------------------------------
(test-section "util")
(use stowm.util)
(test-module 'util)

(test* "regex-match (1)" '("string 100" "string" "100")
       (stowm-regex-match "^([a-z]+) ([0-9]+)$" "string 100"))

(test* "regex-match (2)" '("string 100" "string" "100")
       (stowm-regex-match #/^([a-z]+) ([0-9]+)$/ "string 100"))

(test* "regex-match (3)" #f
       (stowm-regex-match "^([a-z]+) ([0-9]+)$" "100 string"))


(test* "exec-sh (1)" 6
       (begin (stowm-exec-sh "expr 1 + 2 + 3 > /tmp/util-test-out.txt" #f)
              (with-open "/tmp/util-test-out.txt"
                         (lambda (f)
                           (read f)))))

(test* "get-dir-entries (1)" '("stowm" "stowm.rb")
       (sort (stowm-get-dir-entries "./lib")))



;;===================================================================
(test-end)
