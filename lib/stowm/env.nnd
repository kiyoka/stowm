;; #-*- mode: nendo; syntax: scheme -*-;;
;; env record library

(use srfi-9)

(define-record-type <stowm-env>
  (stowm-env pwd home stow-home target local bin lib temp inifile-path db-path stow-program)
  stowm-env?
  (pwd pwd)                    ;; pwd
  (home home)                  ;; "/home/xxxx/"
  (stow-home stow-home)        ;; "/home/xxxx/stowm"
  (target target)              ;; "/usr/local/stow"
  (local local)                ;; "/usr/local"
  (bin bin)                    ;; "/usr/local/bin"
  (lib lib)                    ;; "/usr/local/lib"
  (temp temp)                  ;; "/tmp/stowm"
  (inifile-path inifile-path)  ;; ~/.stowm
  (db-path db-path)            ;; ~/.stowm.db
  (stow-program stow-program)  ;; "/usr/bin/stow"
  )

(define (get-default-env)
  (stowm-env
   (ENV.fetch "PWD")                     ;; pwd
   (ENV.fetch "HOME")                    ;; home
   (File.expand_path "~/stowm")          ;; "/home/xxxx/stowm"
   "/usr/local/stow"
   "/usr/local"
   "/usr/local/bin"
   "/usr/local/lib"
   "/tmp/stowm"
   (File.expand_path "~/.stowm")         ;; ~/.stowm
   (File.expand_path "~/.stowm.db")      ;; ~/.stowm.db
   (let1 lst                             ;; "/usr/bin/stow"
       (filter-map
        (lambda (x)
          (let ((path1 (+ "/usr/bin/" (car x)))
                (path2 (+ "/usr/local/bin/" (car x))))
            (if (File.exist? path1)
                (cons path1 (cdr x))
                (if (File.exist? path2)
                    (cons path2 (cdr x))))))
        '(("xstow" . "-f") ("stow" . "")))
     (if (< 0 (length lst))
         (car lst)
         (begin
           (STDERR.puts "Error: not found the (stow or xstow) program binary.")
           (exit 1))))
   ))

